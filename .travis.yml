language: python

python:
    - 3.7

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''
        # Here we list the dependencies to be installed that are in conda
        - CONDA_DEPENDENCIES='cython scipy beautifulsoup4 requests matplotlib h5py'
    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'

matrix:
    include:
        # Coverage test in Python 3.7
        - python: 3.7
          env: SETUP_CMD='test --coverage'

        # Significant docstring formatting changes in 3.6, so we check both
        - python: 3.7
          env: SETUP_CMD='build_sphinx -w'

        # Try Astropy development version
        - python: 3.7
          env: ASTROPY_VERSION=development ASTROPY_USE_SYSTEM_PYTEST=1

        # Try numpy pre-release version, this runs only when a pre-release
        # is available on pypi.
        - python: 3.7
          env: NUMPY_VERSION=prerelease SETUP_CMD='test' ASTROPY_USE_SYSTEM_PYTEST=1

        # try a version *without* h5py - we need this for readthedocs
        - python: 3.7
          env: CONDA_DEPENDENCIES="`echo $CONDA_DEPENDENCIES | sed 's/ h5py//'`" # this magic incantation removes the substring " h5py" from the dependencies

# before_install:

    # If there are matplotlib tests, comment these out to
    # Make sure that interactive matplotlib backends work
    # - export DISPLAY=:99.0
    # - sh -e /etc/init.d/xvfb start

services:
  - xvfb

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPDENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - python setup.py $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='halotools/tests/coveragerc'; fi
