.. _mock_making_quickstart:

********************************
Quickstart Guide to Making Mocks
********************************

Any mock galaxy catalog built into an N-body simulation 
is generated by some model of the galaxy-halo connection, 
so to make any mock, you will be using the `~halotools.empirical_models` sub-package:

>>> from halotools import empirical_models

The simplest way to get up and running with a mock galaxy catalog  
is to just use one of the default models that come pre-loaded with Halotools. 
In this quickstart guide, we'll use a simple HOD-style model based on 
`~halotools.empirical_models.leauthaud11_model_dictionary`. 

>>> hod_model = empirical_models.PrebuiltHodModelFactory('leauthaud11')

For a list of other out-of-the-box model options you can choose from, see 
:ref:`preloaded_models_overview`. 

All models in Halotools come with a built-in ``populate_mock`` method that 
allows you to create a synthetic galaxy catalog with one line of code:

>>> hod_model.populate_mock() # doctest: +SKIP

Calling the `~halotools.empirical_models.HodModelFactory.populate_mock` method 
with no arguments, as above, automatically retrieves the default halo catalog 
and generates a Monte Carlo realization of your model into those simulated halos. 
The resulting mock catalog can then be accessed via:

>>> hod_model.mock.galaxy_table # doctest: +SKIP

The ``galaxy_table`` attribute is an Astropy Table storing the entire 
collection of mock galaxies, including all properties your model was designed to predict. 

Making Mock Observations
==========================

Once you have a synthetic galaxy catalog in hand, you can use the 
`~halotools.mock_observables` sub-package to make observations of your population. 
For a brief overview giving a few examples of simple observations you can make, see the :ref:`mock_observation_quickstart`. 
For a full discussion of the wide variety of options you have, see the :ref:`mock_observation_overview`. 







